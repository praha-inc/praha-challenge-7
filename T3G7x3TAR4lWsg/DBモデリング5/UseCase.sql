-- 1000文字程度の本文を記入して保存できる
BEGIN TRANSACTION;
  INSERT INTO
    "Post" ("ID", "Title", "Content", "Author", "Created_At", "Update_At", "Delete_At")
  VALUES
    (3, 'ブログ投稿の続き', 'メロスは激怒した。必ず、かの邪智暴虐じゃちぼうぎゃくの王を除かなければならぬと決意した。メロスには政治がわからぬ。メロスは、村の牧人である。笛を吹き、羊と遊んで暮して来た。けれども邪悪に対しては、人一倍に敏感であった。きょう未明メロスは村を出発し、野を越え山越え、十里はなれた此このシラクスの市にやって来た。メロスには父も、母も無い。女房も無い。十六の、内気な妹と二人暮しだ。この妹は、村の或る律気な一牧人を、近々、花婿はなむことして迎える事になっていた。結婚式も間近かなのである。メロスは、それゆえ、花嫁の衣裳やら祝宴の御馳走やらを買いに、はるばる市にやって来たのだ。先ず、その品々を買い集め、それから都の大路をぶらぶら歩いた。メロスには竹馬の友があった。セリヌンティウスである。今は此のシラクスの市で、石工をしている。その友を、これから訪ねてみるつもりなのだ。久しく逢わなかったのだから、訪ねて行くのが楽しみである。歩いているうちにメロスは、まちの様子を怪しく思った。ひっそりしている。もう既に日も落ちて、まちの暗いのは当りまえだが、けれども、なんだか、夜のせいばかりでは無く、市全体が、やけに寂しい。のんきなメロスも、だんだん不安になって来た。路で逢った若い衆をつかまえて、何かあったのか、二年まえに此の市に来たときは、夜でも皆が歌をうたって、まちは賑やかであった筈はずだが、と質問した。若い衆は、首を振って答えなかった。しばらく歩いて老爺ろうやに逢い、こんどはもっと、語勢を強くして質問した。老爺は答えなかった。メロスは両手で老爺のからだをゆすぶって質問を重ねた。老爺は、あたりをはばかる低声で、わずか答えた。「王様は、人を殺します。」「なぜ殺すのだ。」「悪心を抱いている、というのですが、誰もそんな、悪心を持っては居りませぬ。」「たくさんの人を殺したのか。」「はい、はじめは王様の妹婿さまを。それから、御自身のお世嗣よつぎを。それから、妹さまを。それから、妹さまの御子さまを。それから、皇后さまを。それから、賢臣のアレキス様を。」「おどろいた。国王は乱心か。」「いいえ、乱心ではございませぬ。人を、信ずる事が出来ぬ、というのです。このごろは、臣下の心をも、お疑いになり、少しく派手な暮しをしている者には、人質ひとりずつ差し出すことを命じて居ります。御命令を拒めば十字架にかけられて、殺されます。きょうは、六人殺されました。」', 1, '2023-06-18 12:00:00', NULL, NULL);
COMMIT;

-- 記事を更新すると履歴が保存される
BEGIN TRANSACTION;
  INSERT INTO "History" ("PostId", "Title", "Content", "Author", "Update_At")
  SELECT 
  "ID", "Title", "Content" ,"Author", Now()
  FROM "Post" WHERE "ID" = 1;

  UPDATE 
    "Post"
  SET
    "Title" = '初めてのブログ投稿 - 更新',
    "Content" = 'これは私の初めてのブログ投稿です。よろしくお願いします。これから色々と記事を書いていきます。',
    "Update_At" = Now()
  WHERE
    "ID" = 1;

COMMIT;

-- 特定の記事の履歴を一覧表示できる
SELECT * FROM "History" WHERE "PostId" = 1;

-- 確認用一覧表示
SELECT * FROM "Post" WHERE "Delete_At" IS NULL;

-- 履歴を選択して過去の記事状態に戻す事が可能
BEGIN TRANSACTION;
  UPDATE 
    "Post"
    SET
      "Title" = "History"."Title",
      "Content" = "History"."Content",
      "Author" = "History"."Author",
      "Update_At" = Now()
    FROM
      "History"
    WHERE
      "Post"."ID" = "History"."PostId" 
        AND "History"."ID" = 1;
COMMIT;

-- 確認用一覧表示
SELECT *
FROM "Post"
WHERE "Delete_At" IS NULL;

-- 記事を削除すると論理削除によりDelate_Atに値が入る想定
BEGIN TRANSACTION;
  UPDATE 
    "Post"
  SET
    "Delete_At" = Now()
  WHERE
    "ID" = 1;
COMMIT;


-- 記事の閲覧
-- 最新状態の記事を一覧表示できる
SELECT *
FROM "Post"
WHERE "Delete_At" IS NULL;